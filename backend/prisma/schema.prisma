// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
	provider = "postgresql"
	url      = env("DATABASE_URL")
}

generator client {
	provider = "prisma-client-js"
	binaryTargets = ["native", "linux-musl"]
}

model User {
	id               Int             @default(autoincrement()) @id
	email            String
	phone            String
	profilePicture   String
	firstName        String
	lastName         String
	username         String
	login            String          @unique
	campus           String
	wins             Int             @default(0)
	losses           Int             @default(0)
	elo              Int             @default(1000)
	twoFactorEnabled Boolean         @default(false)
	otpSecret        String          @default("")
	otpUri           String          @default("")
	isOwner          Boolean         @default(false)
	isAdmin          Boolean         @default(false)
	status           Status          @default(OFFLINE)

    userFriends      Friends[]       @relation(name: "userFriends")
    friendUsers      Friends[]       @relation(name: "friendsUser")

	participants	 Participant[]
	messages		 Message[]
}

model Message {
	id        	Int      		@default(autoincrement()) @id
	content   	String
	timestamp 	DateTime		@default(now())

	chatRoom  	ChatRoom?   		@relation(fields: [chatId], references: [id])
	chatId		Int?

	sender		User?		@relation(fields: [senderId], references: [id])
	senderId	Int?

	// for commands message
	isStatus	Boolean			@default(false)
}

model Participant {
	id				Int			@default(autoincrement()) @id
	is_admin		Boolean
	is_moderator	Boolean

	chatRoom		ChatRoom?	@relation(fields: [chatId], references: [id]) 
	chatId			Int?

	user			User?		@relation(fields: [userId], references: [id]) 
	userId			Int?
}

model ChatRoom {
	id			Int		@default(autoincrement()) @id
	name 		String	@unique
	is_private	Boolean @default(false)
	hash		String?

	banned		String[] @default([])

	participants Participant[]
	messages	Message[]
}

enum Status {
    ONLINE
    OFFLINE
    IN_GAME
}

model   Friends {
    login       String
    friendLogin String
    Users       User     @relation(name: "userFriends", fields: [login], references: [login])
    Friends     User     @relation(name: "friendsUser", fields: [friendLogin], references: [login])
    pending     Boolean  @default(true)

    @@id([login, friendLogin])
}
